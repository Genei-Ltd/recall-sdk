// This file is auto-generated by @hey-api/openapi-ts

import type { Client, Options as Options2, TDataShape } from './client';
import { client } from './client.gen';
import type { BotCreateData, BotCreateErrors, BotCreateResponses, BotDeleteMediaCreateData, BotDeleteMediaCreateResponses, BotDestroyData, BotDestroyResponses, BotListData, BotListResponses, BotPartialUpdateData, BotPartialUpdateResponses, BotRetrieveData, BotRetrieveResponses, CalendarEventsBotCreateData, CalendarEventsBotCreateResponses, CalendarEventsBotDestroyData, CalendarEventsBotDestroyResponses, CalendarEventsListData, CalendarEventsListResponses, CalendarEventsRetrieveData, CalendarEventsRetrieveResponses, CalendarsAccessTokenCreateData, CalendarsAccessTokenCreateErrors, CalendarsAccessTokenCreateResponses, CalendarsCreateData, CalendarsCreateResponses, CalendarsDestroyData, CalendarsDestroyResponses, CalendarsListData, CalendarsListResponses, CalendarsPartialUpdateData, CalendarsPartialUpdateResponses, CalendarsRetrieveData, CalendarsRetrieveResponses } from './types.gen';

export type Options<TData extends TDataShape = TDataShape, ThrowOnError extends boolean = boolean> = Options2<TData, ThrowOnError> & {
    /**
     * You can provide a client instance returned by `createClient()` instead of
     * individual options. This might be also useful if you want to implement a
     * custom client.
     */
    client?: Client;
    /**
     * You can pass arbitrary values through the `meta` object. This can be
     * used to access values that aren't defined as part of the SDK function.
     */
    meta?: Record<string, unknown>;
};

class _HeyApiClient {
    protected _client: Client = client;
    
    constructor(args?: {
        client?: Client;
    }) {
        if (args?.client) {
            this._client = args.client;
        }
    }
}

export class GeneratedRecallSdk extends _HeyApiClient {
    /**
     * List Bots
     *
     * Get a list of all bots
     *
     * This endpoint is rate limited to:
     * - 60 requests per min per workspace
     */
    public botList<ThrowOnError extends boolean = false>(options?: Options<BotListData, ThrowOnError>) {
        return (options?.client ?? this._client).get<BotListResponses, unknown, ThrowOnError>({
            security: [
                {
                    name: 'Authorization',
                    type: 'apiKey'
                }
            ],
            url: '/api/v1/bot/',
            ...options
        });
    }
    
    /**
     * Create Bot
     *
     * Create a new bot.
     *
     * This endpoint is rate limited to:
     * - 60 requests per min per workspace
     */
    public botCreate<ThrowOnError extends boolean = false>(options: Options<BotCreateData, ThrowOnError>) {
        return (options.client ?? this._client).post<BotCreateResponses, BotCreateErrors, ThrowOnError>({
            security: [
                {
                    name: 'Authorization',
                    type: 'apiKey'
                }
            ],
            url: '/api/v1/bot/',
            ...options,
            headers: {
                'Content-Type': 'application/json',
                ...options.headers
            }
        });
    }
    
    /**
     * Delete Scheduled Bot
     *
     * Deletes a bot. This can only be done on scheduled bots that have not yet joined a call.
     *
     * This endpoint is rate limited to:
     * - 300 requests per min per workspace
     */
    public botDestroy<ThrowOnError extends boolean = false>(options: Options<BotDestroyData, ThrowOnError>) {
        return (options.client ?? this._client).delete<BotDestroyResponses, unknown, ThrowOnError>({
            security: [
                {
                    name: 'Authorization',
                    type: 'apiKey'
                }
            ],
            url: '/api/v1/bot/{id}/',
            ...options
        });
    }
    
    /**
     * Retrieve Bot
     *
     * Get a bot instance.
     *
     * This endpoint is rate limited to:
     * - 300 requests per min per workspace
     */
    public botRetrieve<ThrowOnError extends boolean = false>(options: Options<BotRetrieveData, ThrowOnError>) {
        return (options.client ?? this._client).get<BotRetrieveResponses, unknown, ThrowOnError>({
            security: [
                {
                    name: 'Authorization',
                    type: 'apiKey'
                }
            ],
            url: '/api/v1/bot/{id}/',
            ...options
        });
    }
    
    /**
     * Update Scheduled Bot
     *
     * Update a Scheduled Bot.
     *
     * This endpoint is rate limited to:
     * - 300 requests per min per workspace
     */
    public botPartialUpdate<ThrowOnError extends boolean = false>(options: Options<BotPartialUpdateData, ThrowOnError>) {
        return (options.client ?? this._client).patch<BotPartialUpdateResponses, unknown, ThrowOnError>({
            security: [
                {
                    name: 'Authorization',
                    type: 'apiKey'
                }
            ],
            url: '/api/v1/bot/{id}/',
            ...options,
            headers: {
                'Content-Type': 'application/json',
                ...options.headers
            }
        });
    }
    
    /**
     * Delete Bot Media
     *
     * Deletes bot media stored by Recall. This is irreversable.
     *
     * This endpoint is rate limited to:
     * - 300 requests per min per workspace
     */
    public botDeleteMediaCreate<ThrowOnError extends boolean = false>(options: Options<BotDeleteMediaCreateData, ThrowOnError>) {
        return (options.client ?? this._client).post<BotDeleteMediaCreateResponses, unknown, ThrowOnError>({
            security: [
                {
                    name: 'Authorization',
                    type: 'apiKey'
                }
            ],
            url: '/api/v1/bot/{id}/delete_media/',
            ...options
        });
    }
    
    /**
     * List Calendar Events
     *
     * Get a list of calendar events.
     *
     * This endpoint is rate limited to:
     * - 60 requests per min per workspace
     */
    public calendarEventsList<ThrowOnError extends boolean = false>(options?: Options<CalendarEventsListData, ThrowOnError>) {
        return (options?.client ?? this._client).get<CalendarEventsListResponses, unknown, ThrowOnError>({
            security: [
                {
                    name: 'Authorization',
                    type: 'apiKey'
                }
            ],
            url: '/api/v2/calendar-events/',
            ...options
        });
    }
    
    /**
     * Retrieve Calendar Event
     *
     * Get a calendar event instance.
     *
     * This endpoint is rate limited to:
     * - 300 requests per min per workspace
     */
    public calendarEventsRetrieve<ThrowOnError extends boolean = false>(options: Options<CalendarEventsRetrieveData, ThrowOnError>) {
        return (options.client ?? this._client).get<CalendarEventsRetrieveResponses, unknown, ThrowOnError>({
            security: [
                {
                    name: 'Authorization',
                    type: 'apiKey'
                }
            ],
            url: '/api/v2/calendar-events/{id}/',
            ...options
        });
    }
    
    /**
     * Schedule Bot For Calendar Event
     *
     * Schedule a bot for a calendar event. This endpoint will return the updated calendar event in response.
     *
     * This endpoint is rate limited to:
     * - 600 requests per min per workspace
     */
    public calendarEventsBotDestroy<ThrowOnError extends boolean = false>(options: Options<CalendarEventsBotDestroyData, ThrowOnError>) {
        return (options.client ?? this._client).delete<CalendarEventsBotDestroyResponses, unknown, ThrowOnError>({
            security: [
                {
                    name: 'Authorization',
                    type: 'apiKey'
                }
            ],
            url: '/api/v2/calendar-events/{id}/bot/',
            ...options
        });
    }
    
    /**
     * Schedule Bot For Calendar Event
     *
     * Schedule a bot for a calendar event. This endpoint will return the updated calendar event in response.
     *
     * This endpoint is rate limited to:
     * - 600 requests per min per workspace
     */
    public calendarEventsBotCreate<ThrowOnError extends boolean = false>(options: Options<CalendarEventsBotCreateData, ThrowOnError>) {
        return (options.client ?? this._client).post<CalendarEventsBotCreateResponses, unknown, ThrowOnError>({
            security: [
                {
                    name: 'Authorization',
                    type: 'apiKey'
                }
            ],
            url: '/api/v2/calendar-events/{id}/bot/',
            ...options,
            headers: {
                'Content-Type': 'application/json',
                ...options.headers
            }
        });
    }
    
    /**
     * List Calendars
     *
     * Get a list of calendars.
     *
     * This endpoint is rate limited to:
     * - 60 requests per min per workspace
     */
    public calendarsList<ThrowOnError extends boolean = false>(options?: Options<CalendarsListData, ThrowOnError>) {
        return (options?.client ?? this._client).get<CalendarsListResponses, unknown, ThrowOnError>({
            security: [
                {
                    name: 'Authorization',
                    type: 'apiKey'
                }
            ],
            url: '/api/v2/calendars/',
            ...options
        });
    }
    
    /**
     * Create Calendar
     *
     * Create a new calendar.
     *
     * This endpoint is rate limited to:
     * - 300 requests per min per workspace
     */
    public calendarsCreate<ThrowOnError extends boolean = false>(options: Options<CalendarsCreateData, ThrowOnError>) {
        return (options.client ?? this._client).post<CalendarsCreateResponses, unknown, ThrowOnError>({
            security: [
                {
                    name: 'Authorization',
                    type: 'apiKey'
                }
            ],
            url: '/api/v2/calendars/',
            ...options,
            headers: {
                'Content-Type': 'application/json',
                ...options.headers
            }
        });
    }
    
    /**
     * Delete Calendar
     *
     * Deletes a calendar. This will disconnect the calendar.
     *
     * This endpoint is rate limited to:
     * - 300 requests per min per workspace
     */
    public calendarsDestroy<ThrowOnError extends boolean = false>(options: Options<CalendarsDestroyData, ThrowOnError>) {
        return (options.client ?? this._client).delete<CalendarsDestroyResponses, unknown, ThrowOnError>({
            security: [
                {
                    name: 'Authorization',
                    type: 'apiKey'
                }
            ],
            url: '/api/v2/calendars/{id}/',
            ...options
        });
    }
    
    /**
     * Retrieve Calendar
     *
     * Get a calendar instance.
     *
     * This endpoint is rate limited to:
     * - 300 requests per min per workspace
     */
    public calendarsRetrieve<ThrowOnError extends boolean = false>(options: Options<CalendarsRetrieveData, ThrowOnError>) {
        return (options.client ?? this._client).get<CalendarsRetrieveResponses, unknown, ThrowOnError>({
            security: [
                {
                    name: 'Authorization',
                    type: 'apiKey'
                }
            ],
            url: '/api/v2/calendars/{id}/',
            ...options
        });
    }
    
    /**
     * Update Calendar
     *
     * Update an existing calendar.
     *
     * This endpoint is rate limited to:
     * - 300 requests per min per workspace
     */
    public calendarsPartialUpdate<ThrowOnError extends boolean = false>(options: Options<CalendarsPartialUpdateData, ThrowOnError>) {
        return (options.client ?? this._client).patch<CalendarsPartialUpdateResponses, unknown, ThrowOnError>({
            security: [
                {
                    name: 'Authorization',
                    type: 'apiKey'
                }
            ],
            url: '/api/v2/calendars/{id}/',
            ...options,
            headers: {
                'Content-Type': 'application/json',
                ...options.headers
            }
        });
    }
    
    /**
     * Get Access Token
     *
     * Get the OAuth access token for this calendar account.
     *
     * This endpoint is rate limited to:
     * - 300 requests per min per workspace
     */
    public calendarsAccessTokenCreate<ThrowOnError extends boolean = false>(options: Options<CalendarsAccessTokenCreateData, ThrowOnError>) {
        return (options.client ?? this._client).post<CalendarsAccessTokenCreateResponses, CalendarsAccessTokenCreateErrors, ThrowOnError>({
            security: [
                {
                    name: 'Authorization',
                    type: 'apiKey'
                }
            ],
            url: '/api/v2/calendars/{id}/access-token/',
            ...options
        });
    }
}
